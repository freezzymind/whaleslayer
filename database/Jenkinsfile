pipeline {
  agent { label 'linux-docker-agent' }

  parameters {
    choice(name: 'HOSTS', choices: ['JAPAN_61', 'HONGKONG_93', 'SINGAPUR_49'], description: 'Выбор серверов для деплоя')
    choice(name: 'BRANCHES', choices: ['database', 'monitor'], description: 'Выбор веток проекта для деплоя')
  }

  tools {
    git 'git-linux'
  }

  stages {
    stage('Deploy database to Selected Hosts') {
      steps {
        script {
          def sshMap = [
            'JAPAN_61': 'JAP61_ARCH',
            'HONGKONG_93': 'HK93_ARCH',
            'SINGAPUR_49': 'SN49_ARCH'
          ]

          for (host in params.HOSTS.tokenize(',').collect { it.trim() }) {
            def ip = ''
            withCredentials([string(credentialsId: "HOST_${host}", variable: 'HOST_IP')]) {
              ip = HOST_IP
            }

            def cred = sshMap[host]

            sshagent([cred]) {
              sh """
                echo "[*] Установка и проверка Docker и Compose"
                ssh -o StrictHostKeyChecking=no root@${ip} '
                  command -v docker >/dev/null 2>&1 || curl -fsSL https://get.docker.com | sh
                  if ! docker compose version >/dev/null 2>&1; then
                  mkdir -p /usr/libexec/docker/cli-plugins
                  curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 \
                  -o /usr/libexec/docker/cli-plugins/docker-compose
                  chmod +x /usr/libexec/docker/cli-plugins/docker-compose
                  fi
                '

                echo "[*] Установка и проверка gettext для работы с переменными"
                ssh root@${ip} 'apt-get install gettext -y'

                echo "[*] Подготовка директории проекта"
                ssh root@${ip} 'mkdir -p ~/projects/whaleslayer/database'

                echo "[*] Копирование данных ветки с БД"
                scp -r database/. root@${ip}:~/projects/whaleslayer/database

                echo "[*] Назначение прав доступа юзеру БД"
                ssh root@${ip} '
                cd ./projects/whaleslayer/database &&
                sudo chown 999:999 ./postgresql.conf &&
                sudo chmod 644 ./postgresql.conf
                '

                echo "[*] Сборка и деплой БД"
                ssh root@${ip} '
                cd ~/projects/whaleslayer/database &&

                echo "[*] Выдаём права на выполнение entrypoint.sh..." &&
                chmod +x entrypoint.sh &&

                echo "[*] Запускаем entrypoint.sh..." &&
                ./entrypoint.sh
                '

                echo "[*] Очистка директории от установочных файлов"
                ssh root@${ip} '
                  cd ~/projects/whaleslayer/database/ &&
                  rm -rf Jenkinsfile .gitignore
                '
              """
            }
          }
        }
      }
    }
  }
}